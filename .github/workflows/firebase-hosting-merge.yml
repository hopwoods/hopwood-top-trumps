# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
 - pull_request
 - push

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Build Project
      run: pnpm build

    - name: Install Function Dependencies
      run: cd fable-forge-functions && pnpm install --frozen-lockfile && cd ..

    - name: Build Functions
      run: cd fable-forge-functions && pnpm run build && cd .. # Assuming 'build' script compiles TS

    - name: Deploy Hosting
      if: github.event_name == 'push' # Only deploy hosting on push events (e.g., to main or other branches)
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_HOPWOOD_TOP_TRUMPS }}'
        channelId: live # Or make this conditional based on branch
        projectId: hopwood-top-trumps

    # Removed the token-based function deployment step, preferring the service account method below.
    - name: Deploy Functions (using Service Account)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy functions on push to main
      run: |
        npm install -g firebase-tools
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_HOPWOOD_TOP_TRUMPS }}' > ./firebase-service-account.json
        firebase deploy --only functions --project "hopwood-top-trumps" --force
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ./firebase-service-account.json
